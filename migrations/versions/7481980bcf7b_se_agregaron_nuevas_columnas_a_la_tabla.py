"""Se agregaron nuevas columnas a la tabla

Revision ID: 7481980bcf7b
Revises: 
Create Date: 2024-10-20 17:18:00.734531

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '7481980bcf7b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('email')
        batch_op.drop_index('username')

    op.drop_table('user')
    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.add_column(sa.Column('numbers', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('resolved', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('message', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('message_success', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('message_failure', sa.String(length=80), nullable=False))
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('operation',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('result',
               existing_type=mysql.INTEGER(),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('time_taken',
               existing_type=mysql.TIME(),
               type_=sa.Integer(),
               nullable=True)
        batch_op.drop_column('solved_at')

    with op.batch_alter_table('progress', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('last_updated',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('progress', schema=None) as batch_op:
        batch_op.alter_column('last_updated',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('exercises', schema=None) as batch_op:
        batch_op.add_column(sa.Column('solved_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.alter_column('time_taken',
               existing_type=sa.Integer(),
               type_=mysql.TIME(),
               nullable=False)
        batch_op.alter_column('result',
               existing_type=sa.String(length=80),
               type_=mysql.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('operation',
               existing_type=sa.String(length=80),
               type_=mysql.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('message_failure')
        batch_op.drop_column('message_success')
        batch_op.drop_column('message')
        batch_op.drop_column('resolved')
        batch_op.drop_column('numbers')

    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('username', ['username'], unique=True)
        batch_op.create_index('email', ['email'], unique=True)

    # ### end Alembic commands ###
